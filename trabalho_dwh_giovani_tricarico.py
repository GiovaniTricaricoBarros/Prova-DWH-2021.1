# -*- coding: utf-8 -*-
"""Trabalho DWH - Giovani Tricarico.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1k1hdJCRobR4qoMGTPFMH6lALPGagk8ga
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import zipfile
import requests
from io import BytesIO
import os
import plotly.graph_objs as go 
import plotly.offline as pyo

os.makedirs("./Enade", exist_ok=True)

ano1="https://download.inep.gov.br/microdados/Enade_Microdados/microdados_Enade_2017_portal_2018.10.09.zip"
filebytes= BytesIO(requests.get(ano1).content)
myzip = zipfile.ZipFile(filebytes)
myzip.extractall("./Enade")
enade2017 = pd.read_csv("/content/Enade/3.DADOS/MICRODADOS_ENADE_2017.txt",sep = ";", decimal = ",")

ano2="https://download.inep.gov.br/microdados/Enade_Microdados/microdados_enade_2018.zip"
filebytes= BytesIO(requests.get(ano2).content)
myzip = zipfile.ZipFile(filebytes)
myzip.extractall("./Enade")
enade2018 = pd.read_csv("/content/Enade/2018/3.DADOS/microdados_enade_2018.txt",sep = ";", decimal = ",")

ano3="https://download.inep.gov.br/microdados/Enade_Microdados/microdados_enade_2019.zip" 
filebytes= BytesIO(requests.get(ano3).content)
myzip = zipfile.ZipFile(filebytes)
myzip.extractall("./Enade")
enade2019 = pd.read_csv("/content/Enade/3.DADOS/microdados_enade_2019.txt",sep = ";", decimal = ",")

Tbl_enade = enade2017
Tbl_enade = Tbl_enade.append(enade2018)
Tbl_enade = Tbl_enade.append(enade2019)

Tbl_enade=Tbl_enade.iloc[:,[0,1,4,10,11,14,34,68,72,73,77,91,106]]

Tbl_enade['CO_TURNO_GRADUACAO'] = Tbl_enade['CO_TURNO_GRADUACAO'].map({1:'Matutino',2:'Vespertino',3:'Integral',4:'Noturno'},na_action=None)
Tbl_enade['CO_RS_I9'] = Tbl_enade['CO_RS_I9'].map({"A":'Menos de uma hora',"B":'Entre uma e duas horas',"C":'Entre duas e três horas',"D":'Entre três e quatro horas',"E":'Quatro horas e não consegui terminar.',"*":"Resposta anulada", ".":"Não respondeu"},na_action=None)
Tbl_enade['QE_I04'] = Tbl_enade['QE_I04'].map({'A':'Nenhuma','B':'1º ao 5º ano','C':'6º ao 9º ano','D':'Ensino Médio','E':'Ensino Superior - Graduação','F':'Pós-graduação'},na_action=None)
Tbl_enade['QE_I05'] = Tbl_enade['QE_I05'].map({'A':'Nenhuma','B':'1º ao 5º ano','C':'6º ao 9º ano','D':'Ensino Médio','E':'Ensino Superior - Graduação','F':'Pós-graduação'},na_action=None)
Tbl_enade['QE_I09'] = Tbl_enade['QE_I09'].map({'A':'Não possui renda, fincanciada pelo governo','B':'Não possui renda, fincanciado pela família ou conhecidos','C':'Tem renda, mas recebe alguma ajuda','D':'Possui renda renda e não precisa de ajuda','E':'Possui renda e contribui para o sustento familiar','F':'Principal responsável pela renda famíliar'},na_action=None)
Tbl_enade['QE_I23'] = Tbl_enade['QE_I23'].map({'A':'Nenhuma','B':'De uma a três horas','C':'Quatro a sete horas','D':'Oito a doze horas','E':'Mais de doze horas'},na_action=None)
Tbl_enade['QE_I38'] = Tbl_enade['QE_I38'].map({1:'Discordo Totalmente',2:'Discordo',3:'Discordo parcialmente',4:'Concordo parcialmente',5:'Concordo',6:'Concordo Totalmente',7:'Não se aplica',8:'Não sei responder', np.nan:'Sem resposta'},na_action=None)

Tbl_enade

RegistroEstudante=Tbl_enade.iloc[:,[3,4,5]]
TempoEnade=Tbl_enade.iloc[:,[7]]
Ano=Tbl_enade.iloc[:,[0]]
Instituição=Tbl_enade.iloc[:,[1]]
Professores=Tbl_enade.iloc[:,[12]]
Presença=Tbl_enade.iloc[:,[6]]
TempoEstudo=Tbl_enade.iloc[:,[11]]
SituaçãoFamília=Tbl_enade.iloc[:,[10]]
Escolaridade=Tbl_enade.iloc[:,[8,9]]
Curso=Tbl_enade.iloc[:,[2]]

import sqlite3
from sqlite3 import Error
conexao = sqlite3.connect('BancoDeDadosEnade.db')
Tbl_enade.to_sql('TabelaFato',conexao,if_exists='replace',index=False)
RegistroEstudante.to_sql('RegistroEstudante',conexao,if_exists='replace',index=False)
TempoEnade.to_sql('TempoEnade',conexao,if_exists='replace',index=False)
Ano.to_sql('Ano',conexao,if_exists='replace',index=False)
Instituição.to_sql('Instituição',conexao,if_exists='replace',index=False)
Professores.to_sql('Professores',conexao,if_exists='replace',index=False)
Presença.to_sql('Presença',conexao,if_exists='replace',index=False)
TempoEstudo.to_sql('TempoEstudo',conexao,if_exists='replace',index=False)
SituaçãoFamília.to_sql('SituaçãoFamília',conexao,if_exists='replace',index=False)
Escolaridade.to_sql('Escolaridade',conexao,if_exists='replace',index=False)
Curso.to_sql('Curso',conexao,if_exists='replace',index=False)

TempoDeEstudoPorAno = Tbl_enade.iloc[:,[0,11]]

TempoDeEstudoPorAno

ano=TempoDeEstudoPorAno.groupby(TempoDeEstudoPorAno.NU_ANO)
ano17 = ano.get_group(2017)
ano18=ano.get_group(2018)
ano19=ano.get_group(2019)
ano17=ano17.groupby('QE_I23').count()
ano18=ano18.groupby('QE_I23').count()
ano19=ano19.groupby('QE_I23').count()
ano17 = ano17.rename(columns={'NU_ANO': '2017'})
ano18 = ano18.rename(columns={'NU_ANO': '2018'})
ano19 = ano19.rename(columns={'NU_ANO': '2019'})
ano17 = ano17.transpose()
ano18 = ano18.transpose()
ano19 = ano19.transpose()

Anos = ano17
Anos = Anos.append(ano18)
Anos = Anos.append(ano19)
Anos.reset_index(level=0, inplace=True)
Anos = Anos.rename(columns={'index': 'Anos'})

Anos

Grafico = go.Figure(
   data=[
       go.Bar(
           x=Anos['Anos'],
           y=Anos['De uma a três horas'],
           name='De uma a três horas',
           marker=dict(color='red')
       ),
       go.Bar(
           x=Anos['Anos'],
           y=Anos['Quatro a sete horas'],
           name='Quatro a sete horas',
           marker=dict(color='green')
       ),
       go.Bar(
           x=Anos['Anos'],
           y=Anos['Oito a doze horas'],
           name='Oito a doze horas',
           marker=dict(color='purple')
       ),
       go.Bar(
           x=Anos['Anos'],
           y=Anos['Mais de doze horas'],
           name='Mais de doze horas',
           marker=dict(color='orange')
       ),
       go.Bar(
           x=Anos['Anos'],
           y=Anos['Nenhuma'],
           name='Nenhuma',
           marker=dict(color='blue')
       ),    
   ],
   layout=go.Layout(    
   )
)
pyo.plot(Grafico)

Grafico